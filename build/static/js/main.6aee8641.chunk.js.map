{"version":3,"sources":["assets/icons/spinner.svg","assets/icons/plus.svg","assets/icons/more.svg","assets/icons/user.svg","assets/icons/group.svg","assets/icons/gear.svg","assets/icons/logout.svg","redux/user/user.types.js","redux/user/user.reducer.js","redux/group/group.types.js","redux/group/group.reducer.js","redux/root-reducer.js","redux/user/user.actions.js","api/index.js","redux/user/user.sagas.js","redux/group/group.actions.js","redux/group/group.sagas.js","redux/root-saga.js","redux/store.js","Components/FormModal/index.js","Components/ListModal/index.js","Pages/HomePage/index.js","Pages/SignIn/index.js","App.js","index.js"],"names":["module","exports","userActionTypes","SET_CURRENT_USER","SIGN_IN_START","SIGN_IN_SUCCESS","SIGN_IN_FAILURE","SIGN_OUT_START","SIGN_OUT_SUCCESS","SIGN_OUT_FAILURE","SIGN_UP_START","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","INITIAL_STATE","currentUser","isAuthenticated","error","userReducer","state","action","type","payload","groupActionTypes","GET_GROUPS_START","GET_GROUPS_SUCCESS","GET_GROUPS_FAILURE","CREATE_GROUP_START","CREATE_GROUP_SUCCESS","CREATE_GROUP_FAILURE","DELETE_GROUP_START","DELETE_GROUP_SUCCESS","DELETE_GROUP_FAILURE","ADD_USER_START","ADD_USER_SUCCESS","ADD_USER_FAILURE","GET_USERS_IN_GROUP_START","GET_USERS_IN_GROUP_SUCCESS","groups","users","loading","msg","combineReducers","user","group","concat","filter","_id","id","signInSuccess","signInFailure","err","signUpSuccess","token","localStorage","getItem","api","axios","create","baseURL","headers","interceptors","request","use","config","defaults","callApi","get","endpoint","res","data","response","post","body","delete","signIn","signUp","signout","onSignIn","onSignUp","onSignOut","userSagas","call","setItem","JSON","stringify","put","Error","console","log","clear","takeLatest","all","fork","getGroupSuccess","getUsersInGroupSuccess","createGroupSuccess","addUserSuccess","createGroup","getGroups","getUserInGroup","deleteGroup","addUser","onGetGroup","onGetUsersInGroup","onCreateGroup","onDeleteGroup","onAddUser","groupSagas","message","takeEvery","rootSaga","sagaMiddleware","createSagaMiddleware","middlewares","store","createStore","rootReducer","applyMiddleware","run","Modal","props","setValue","inputValue","this","toggleModal","field","groupActiveId","className","onSubmit","e","preventDefault","htmlFor","onChange","setState","target","name","value","placeholder","onClick","disabled","alt","src","spinner","PureComponent","connect","dispatch","groupId","email","ListModal","map","key","HomePage","openCreateGroupModal","openAddUserModal","openUserListModal","openOption","isChanged","groupActive","prevProps","prevState","deleteGroupReq","getUsersReq","signOutReq","toggleGroupModal","toggleUserModal","Fragment","style","opacity","plus","length","more","gear","history","push","logout","FormModal","nextProps","React","deleteGroupStart","getUsersInGroupStart","withRouter","SignIn","memo","useRef","password","emailSignUp","passwordSignUp","confirmPassword","useState","displayForm","setDisplayForm","toggleForm","to","current","defaultValue","ref","autoComplete","signInStart","signUpStart","App","exact","path","render","Page","Component","ReactDOM","StrictMode","document","getElementById"],"mappings":"oGAAAA,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,qUCa5BC,EAbS,CACpBC,iBAAkB,mBAClBC,cAAe,gBACfC,gBAAiB,kBACjBC,gBAAiB,kBACjBC,eAAgB,iBAChBC,iBAAkB,mBAClBC,iBAAkB,mBAClBC,cAAe,gBACfC,gBAAiB,kBACjBC,gBAAiB,mBCRfC,EAAgB,CAClBC,YAAa,KACbC,iBAAiB,EACjBC,MAAO,MAkCIC,EA/BK,WAAoC,IAAnCC,EAAkC,uDAA1BL,EAAeM,EAAW,uCACnD,OAAQA,EAAOC,MACX,KAAKlB,EAAgBG,gBACjB,OAAO,eACAa,EADP,CAEIH,iBAAiB,EACjBC,MAAO,OAEf,KAAKd,EAAgBS,gBACjB,OAAO,eACAO,EADP,CAEIJ,YAAaK,EAAOE,QACpBN,iBAAiB,EACjBC,MAAO,OAEf,KAAKd,EAAgBK,eACjB,OAAO,eACAW,GAGX,KAAKhB,EAAgBM,iBACjB,OAAO,eACAU,EADP,CAEIJ,YAAa,KACbC,iBAAiB,IAEzB,QACI,OAAOG,IClBJI,EAjBU,CACrBC,iBAAkB,mBAClBC,mBAAoB,qBACpBC,mBAAoB,qBACpBC,mBAAoB,qBACpBC,qBAAsB,uBACtBC,qBAAsB,uBACtBC,mBAAoB,qBACpBC,qBAAsB,uBACtBC,qBAAsB,uBACtBC,eAAgB,iBAChBC,iBAAkB,mBAClBC,iBAAkB,mBAClBC,yBAA0B,2BAC1BC,2BAA4B,8BCZ1BvB,EAAgB,CAClBwB,OAAQ,GACRC,MAAO,GACPtB,MAAO,KACPuB,QAAS,GACTC,IAAK,MCFMC,cAAgB,CAC3BC,OACAC,MDGW,WAAoC,IAAnCzB,EAAkC,uDAA1BL,EAAeM,EAAW,uCAC9C,OAAQA,EAAOC,MACX,KAAKE,EAAiBC,iBAClB,OAAO,eACAL,EADP,CAEIqB,QAAS,SAEjB,KAAKjB,EAAiBE,mBAClB,OAAO,eACAN,EADP,CAEImB,OAAQlB,EAAOE,QACfkB,QAAS,KAEjB,KAAKjB,EAAiBa,yBAClB,OAAO,eACAjB,EADP,CAEIqB,QAAS,UAEjB,KAAKjB,EAAiBc,2BAClB,OAAO,eACAlB,EADP,CAEIoB,MAAOnB,EAAOE,QACdkB,QAAS,GACTC,IAAK,2BAEb,KAAKlB,EAAiBI,mBAClB,OAAO,eACAR,EADP,CAEIqB,QAAS,QACTC,IAAK,KAEb,KAAKlB,EAAiBK,qBAClB,OAAO,eACAT,EADP,CAEImB,OAAQnB,EAAMmB,OAAOO,OAAOzB,EAAOE,SACnCkB,QAAS,GACTC,IAAK,4BAEb,KAAKlB,EAAiBO,mBAClB,OAAO,eACAX,EADP,CAEIqB,QAAS,WAEjB,KAAKjB,EAAiBQ,qBAClB,OAAO,eACAZ,EADP,CAEImB,OAAQnB,EAAMmB,OAAOQ,QAAO,SAAAF,GAAK,OAAIA,EAAMG,MAAQ3B,EAAOE,QAAQ0B,MAClEP,IAAKrB,EAAOE,QAAQmB,IACpBD,QAAS,KAEjB,KAAKjB,EAAiBU,eAClB,OAAO,eACAd,EADP,CAEIqB,QAAS,UAEjB,KAAKjB,EAAiBW,iBAClB,OAAO,eACAf,EADP,CAEIoB,MAAOpB,EAAMoB,MAAMM,OAAOzB,EAAOE,SACjCkB,QAAS,GACTC,IAAK,yBAEb,QACI,OAAOtB,M,uBElEN8B,EAAgB,SAAAN,GAAI,MAAK,CAClCtB,KAAMlB,EAAgBG,gBACtBgB,QAASqB,IAGAO,EAAgB,SAAAC,GAAG,MAAK,CACjC9B,KAAMlB,EAAgBI,gBACtBe,QAAS6B,IAQAC,EAAgB,SAAAT,GAAI,MAAK,CAClCtB,KAAMlB,EAAgBS,gBACtBU,QAASqB,I,yBCtBAU,EAAQC,aAAaC,QAAQ,SAC7BC,EAAMC,IAAMC,OAAO,CAC5BC,QAAS,8CACTC,QAAS,CACL,eAAgB,sBAIxBJ,EAAIK,aAAaC,QAAQC,KAAI,SAAUC,GACnC,IAAMX,EAAQC,aAAaC,QAAQ,SAEnC,OADAS,EAAOJ,QAAQP,MAAQA,GAAgB,GAChCW,KAGPX,IAAOI,IAAMQ,SAASL,QAAf,MAAkCP,GAE7C,IA+Bea,EA9BJ,CACGC,IADH,SACOC,GAAW,OAAD,mIAEMZ,EAAIW,IAAIC,GAFd,cAENC,EAFM,yBAGLA,EAAIC,MAHC,yDAKL,KAAMC,UALD,4DASdC,KAVH,SAUQJ,EAAUK,GAAO,OAAD,mIAEDjB,EAAIgB,KAAKJ,EAAUK,GAFlB,cAEbJ,EAFa,yBAGZA,EAAIC,MAHQ,yDAKZ,KAAMC,UALM,4DASrBG,OAnBH,SAmBUN,GAAW,OAAD,mIAEGZ,EAAIkB,OAAON,GAFd,cAETC,EAFS,yBAGRA,EAAIC,MAHI,yDAKR,KAAMC,UALE,6D,WCjCdI,G,WAkBAC,G,WAYAC,G,WAKAC,G,WAIAC,G,WAIAC,G,WAIAC,GA/CV,SAAUN,EAAV,gFAEa,OAFMrD,EAAnB,EAAmBA,QAAnB,kBAEmB4D,YAAK1B,EAAIgB,KAAM,eAAgBlD,GAFlD,YAEO+C,EAFP,QAIShB,MAJT,iBAQK,OAHQA,EAAgBgB,EAAhBhB,MAAOV,EAAS0B,EAAT1B,KACfW,aAAa6B,QAAQ,OAAQC,KAAKC,UAAU1C,IAC5CW,aAAa6B,QAAQ,QAAS9B,GAPnC,UAQWiC,YAAIrC,KARf,sCAUW,IAAIsC,MAAMlB,EAAIC,KAAKrD,OAV9B,gCAcC,OAdD,0BAaCuE,QAAQC,IAAR,MAbD,UAcOH,YAAIpC,EAAc,EAAD,KAdxB,sDAkBA,SAAU0B,EAAV,gFAEc,OAFKtD,EAAnB,EAAmBA,QAAnB,kBAEoB4D,YAAK1B,EAAIgB,KAAM,eAAgBlD,GAFnD,OAMC,OAJMgD,EAFP,OAGSjB,EAAgBiB,EAAhBjB,MAAOV,EAAS2B,EAAT3B,KACfW,aAAa6B,QAAQ,OAAQC,KAAKC,UAAU1C,IAC5CW,aAAa6B,QAAQ,QAAS9B,GAL/B,UAMOiC,YAAIlC,EAAcT,IANzB,gCAQC,OARD,oCAQO2C,YAAIpC,EAAc,EAAD,KARxB,sDAYA,SAAU2B,IAAV,iEAEH,OADAvB,aAAaoC,MAAM,QAAS,QADzB,SAEGJ,YFD2B,CACjCjE,KAAMlB,EAAgBM,mBEFnB,uCAKA,SAAUqE,IAAV,iEACH,OADG,SACGa,YAAWxF,EAAgBE,cAAesE,GAD7C,uCAIA,SAAUI,IAAV,iEACH,OADG,SACGY,YAAWxF,EAAgBQ,cAAeiE,GAD7C,uCAIA,SAAUI,IAAV,iEACH,OADG,SACGW,YAAWxF,EAAgBK,eAAgBqE,GAD9C,uCAIA,SAAUI,IAAV,iEACH,OADG,SACGW,YAAI,CAACC,YAAKf,GAAWe,YAAKd,GAAWc,YAAKb,KAD7C,uCClDA,IAIMc,EAAkB,SAAAxD,GAAM,MAAK,CACtCjB,KAAME,EAAiBE,mBACvBH,QAASgB,IAaAyD,EAAyB,SAAAxD,GAAK,MAAK,CAC5ClB,KAAME,EAAiBc,2BACvBf,QAASiB,IAQAyD,EAAqB,SAAApD,GAAK,MAAK,CACxCvB,KAAME,EAAiBK,qBACvBN,QAASsB,IAkBAqD,EAAiB,SAAAtD,GAAI,MAAK,CACnCtB,KAAME,EAAiBW,iBACvBZ,QAASqB,I,WChDIuD,I,YASAC,I,YASAC,I,YASAC,I,YASAC,I,YASAC,I,YAIAC,I,YAIAC,I,YAIAC,I,YAIAC,I,YAIAC,IAjEV,SAAUV,GAAV,8EAEmB,OAFK5E,EAAxB,EAAwBA,QAAxB,kBAEyB4D,YAAK1B,EAAIgB,KAAM,UAAWlD,GAFnD,OAGC,OAHD,SAESsB,EAFT,EAESA,MAFT,SAGO0C,YAAIU,EAAmBpD,IAH9B,yDAKC4C,QAAQC,IAAR,MALD,sDASA,SAAUU,KAAV,yEAEoB,OAFpB,kBAE0BjB,YAAK1B,EAAIW,IAAK,WAFxC,OAGC,OAHD,SAES7B,EAFT,EAESA,OAFT,SAGOgD,YAAIQ,EAAgBxD,IAH3B,uDAKCkD,QAAQC,IAAR,MALD,sDASA,SAAUW,GAAV,8EAEmB,OAFQ9E,EAA3B,EAA2BA,QAA3B,kBAEyB4D,YAAK1B,EAAIW,IAAL,kBAAqB7C,EAArB,cAF7B,OAGC,OAHD,SAESiB,EAFT,EAESA,MAFT,SAGO+C,YAAIS,EAAuBxD,IAHlC,yDAKCiD,QAAQC,IAAR,MALD,uDASA,SAAUY,GAAV,gFAE4B,OAFJ/E,EAAxB,EAAwBA,QAAxB,kBAEkC4D,YAAK1B,EAAIkB,OAAL,kBAAwBpD,IAF9D,OAGC,OAHD,SAESsB,EAFT,EAESA,MAAOiE,EAFhB,EAEgBA,QAFhB,SAGOvB,aDMqBtC,ECNEJ,EAAMG,IDMK,CAC5C1B,KAAME,EAAiBQ,qBACvBT,QAAS,CAAE0B,KAAIP,ICR6BoE,MAHzC,yDAKCrB,QAAQC,IAAR,MALD,kCDS2B,IAACzC,ICT5B,kBASA,SAAUsD,GAAV,8EAEkB,OAFEhF,EAApB,EAAoBA,QAApB,kBAEwB4D,YAAK1B,EAAIgB,KAAM,kBAAmBlD,GAF1D,OAGC,OAHD,SAESqB,EAFT,EAESA,KAFT,SAGO2C,YAAIW,EAAetD,IAH1B,yDAKC6C,QAAQC,IAAR,MALD,uDASA,SAAUc,KAAV,iEACH,OADG,SACGO,YAAUvF,EAAiBC,iBAAkB2E,IADhD,wCAIA,SAAUK,KAAV,iEACH,OADG,SACGM,YAAUvF,EAAiBa,yBAA0BgE,IADxD,wCAIA,SAAUK,KAAV,iEACH,OADG,SACGd,YAAWpE,EAAiBI,mBAAoBuE,IADnD,wCAIA,SAAUQ,KAAV,iEACH,OADG,SACGf,YAAWpE,EAAiBO,mBAAoBuE,IADnD,wCAIA,SAAUM,KAAV,iEACH,OADG,SACGhB,YAAWpE,EAAiBU,eAAgBqE,IAD/C,wCAIA,SAAUM,KAAV,iEACH,OADG,SACGhB,YAAI,CACNC,YAAKU,IACLV,YAAKW,IACLX,YAAKY,IACLZ,YAAKa,IACLb,YAAKc,MANN,wC,gBClEkBI,IAAV,SAAUA,KAAV,iEACX,OADW,SACLnB,YAAI,CAACC,YAAKZ,GAAYY,YAAKe,MADtB,wCCEf,IAAMI,GAAiBC,cAEjBC,GAAc,CAACF,IAERG,GAAQC,YAAYC,EAAaC,IAAe,WAAf,EAAmBJ,KAEjEF,GAAeO,IAAIR,IAEJI,U,6BCRTK,I,wDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDtG,MAAQ,CACTuG,SAAU,GACVC,WAAY,IAJD,E,qDAQT,IAAD,OACGA,EAAeC,KAAKzG,MAApBwG,WADH,EAEwEC,KAAKH,MAA1EvB,EAFH,EAEGA,YAAaI,EAFhB,EAEgBA,QAAS9D,EAFzB,EAEyBA,QAASqF,EAFlC,EAEkCA,YAAaC,EAF/C,EAE+CA,MAAOC,EAFtD,EAEsDA,cAsB3D,OACI,yBAAKC,UAAU,SACX,yBAAKA,UAAU,iBACX,0BAAMC,SAvBD,SAAAC,GAEb,OADAA,EAAEC,iBACML,GACJ,IAAK,QACD5B,EAAYyB,GACZ,MACJ,IAAK,OACDrB,EAAQyB,EAAeJ,GACvB,MACJ,QACI,UAcI,2BAAOS,QAAQ,cAAwB,UAAVN,EAAoB,aAAe,SAChE,yBAAKE,UAAU,iBACX,2BAAOK,SAZV,SAACH,GACd,EAAKI,SAAL,gBACKJ,EAAEK,OAAOC,KAAON,EAAEK,OAAOE,SAUaD,KAAK,aAAanH,KAAK,OAAOqH,YAAW,gBAAqB,UAAVZ,EAAoB,aAAe,gBAAmB9E,GAAG,gBAE5I,yBAAKgF,UAAU,eACX,4BAAQW,QAASd,EAAaxG,KAAK,SAASoH,MAAM,UAAlD,UACA,4BAAQG,SAAUpG,IAAW,EAAMnB,KAAK,SAASoH,MAAM,UAAoB,UAAVX,EAAoB,SAAW,UAI/F,UAAZtF,GAAuB,yBAAKqG,IAAI,aAAab,UAAU,UAAUc,IAAKC,Y,GA/CnEC,kBA8DLC,gBATS,SAAA9H,GAAK,MAAK,CAC9BqB,QAASrB,EAAMyB,MAAMJ,YAGE,SAAA0G,GAAQ,MAAK,CACpChD,YAAa,SAAAsC,GAAI,OAAIU,EJtCgB,CACrC7H,KAAME,EAAiBI,mBACvBL,QIoC+C,CAAEkH,WACjDlC,QAAS,SAAC6C,EAASC,GAAV,OAAoBF,EJnBI,CACjC7H,KAAME,EAAiBU,eACvBX,QIiBmD,CAAE6H,UAASC,eAGnDH,CAA6CzB,IC/DtD6B,I,6KAEQ,IAAD,EACmCzB,KAAKH,MAArCjF,EADH,EACGA,QAASD,EADZ,EACYA,MAAOsF,EADnB,EACmBA,YACxB,OACI,yBAAKG,UAAU,SACX,yBAAKA,UAAU,iBACX,wBAAIA,UAAU,aAENzF,EAAM+G,KAAI,SAAA3G,GAAI,OAAI,wBAAIqF,UAAU,YAAYuB,IAAK5G,EAAKI,KAAMJ,EAAK6F,UAGzE,4BAAQG,QAASd,EAAaxG,KAAK,UAAnC,UAES,UAAZmB,GAAuB,yBAAKqG,IAAI,aAAab,UAAU,iBAAiBc,IAAKC,Y,GAdtEC,kBAyBTC,gBALS,SAAA9H,GAAK,MAAK,CAC9BqB,QAASrB,EAAMyB,MAAMJ,QACrBD,MAAOpB,EAAMyB,MAAML,SAGR0G,CAAyBI,I,wHCdlCG,I,wDACF,WAAY/B,GAAQ,IAAD,8BACf,cAAMA,IACDtG,MAAQ,CACTsI,sBAAsB,EACtBC,kBAAkB,EAClBC,mBAAmB,EACnBC,YAAY,EACZC,WAAW,EACXC,YAAa,IARF,E,gEAaflC,KAAKH,MAAMtB,c,yCAUI4D,EAAWC,GAI1B,GAHAxE,QAAQC,IAAImC,KAAKzG,OACjBqE,QAAQC,IAAIuE,GACZxE,QAAQC,IAAIsE,GACRnC,KAAKzG,MAAMsB,MAAQuH,EAAUvH,IAC7B,OAAQmF,KAAKzG,MAAMsB,KACf,IAAK,4BACDmF,KAAKU,SAAS,CACVwB,YAAa,GACbrH,IAAK,KAET,MACJ,IAAK,uBACD+C,QAAQC,IAAImC,KAAKzG,OACjByG,KAAKU,SAAS,CACVoB,kBAAkB,EAClBjH,IAAK,KAET,MACJ,IAAK,0BACDmF,KAAKU,SAAS,CACVmB,sBAAsB,EACtBhH,IAAK,KAET,MACJ,QACI,U,+BAKN,IAAD,SACqGmF,KAAKzG,MAAvGsI,EADH,EACGA,qBAAsBC,EADzB,EACyBA,iBAAkBC,EAD3C,EAC2CA,kBAAmBG,EAD9D,EAC8DA,YAAaF,EAD3E,EAC2EA,WAAYC,EADvF,EACuFA,UADvF,EAEuEjC,KAAKH,MAAzEjF,EAFH,EAEGA,QAASF,EAFZ,EAEYA,OAAQC,EAFpB,EAEoBA,MAAO0H,EAF3B,EAE2BA,eAAgBC,EAF3C,EAE2CA,YAAaC,EAFxD,EAEwDA,WAGvDC,EAAmB,WACrB,EAAK9B,UAAS,SAAAnH,GAAK,MAAK,CAAEsI,sBAAuBtI,EAAMsI,0BAGrDY,EAAkB,WACpB,EAAK/B,UAAS,SAAAnH,GAAK,MAAK,CAAEuI,kBAAmBvI,EAAMuI,sBAqCvD,MAAgB,SAAZlH,EAA2B,yBAAKwF,UAAU,eAAea,IAAI,aAAaC,IAAKC,OAE/E,kBAAC,IAAMuB,SAAP,KACI,yBAAKtC,UAAU,QACE,WAAZxF,GACG,oCACI,yBAAKwF,UAAU,iBAAiBc,IAAKC,KAASF,IAAI,eAClD,yBAAKb,UAAU,aAGvB,yBAAKA,UAAU,WAAWuC,MAAO,CAAEC,QAAqB,WAAZhI,GAAwB,KAChE,yBAAKwF,UAAU,gBACX,0BAAMA,UAAU,SAAhB,cACA,4BAAQW,QAASyB,EAAkBpC,UAAU,4BACzC,yBAAKA,UAAU,oBAAoBc,IAAK2B,KAAM5B,IAAI,QAClD,0BAAMb,UAAU,eAAhB,kBAGP1F,EAAOoI,OAAS,GACb,wBAAI1C,UAAU,cACT1F,EAAOgH,KAAI,gBAAGd,EAAH,EAAGA,KAAMzF,EAAT,EAASA,IAAT,OACR,wBAAIiF,UAAS,qBAAgB8B,EAAY/G,MAAQA,GAAO,aAAewG,IAAKxG,EAAK4F,QAAS,kBA/CpG/F,EA+CoH,CAAE4F,OAAMzF,YA9C1I,EAAKuF,SAAS,CAAEwB,YAAalH,EAAOiH,WAAW,IADjC,IAAAjH,IAgDc,8BAAO4F,GADX,IACyBsB,EAAY/G,MAAQA,GAAO,yBAAK4F,QAAS,WA3C1FsB,EA2C4GlH,IAAMiF,UAAU,WAAhD,UAAmE,yBAAKA,UAAU,eAAf,iBAMvI,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,cAAc8B,EAAYtB,MACzC,yBAAKR,UAAU,kBACX,yBAAKW,QA9DR,WACjB,EAAKL,UAAS,SAAAnH,GAAK,MAAK,CAAEyI,YAAazI,EAAMyI,gBA6DG5B,UAAU,YAAYc,IAAK6B,KAAM9B,IAAI,SAChEe,GAAc,yBAAK5B,UAAU,UACzB8B,EAAY/G,KACT,oCACI,4BAAQ4F,QAAS0B,EAAiBhJ,KAAK,UAAS,8CAAyB,8BAAM,yBAAKyH,IAAKnG,KAAMkG,IAAI,WACnG,4BAAQF,QAlD3B,WACbnD,QAAQC,IAAIlD,IACS,IAAjBA,EAAMmI,QAAgBb,KACtBK,EAAYJ,EAAY/G,KACxB,EAAKuF,SAAS,CACVuB,WAAW,KAGnB,EAAKvB,SAAS,CACVqB,mBAAmB,KAyCoCtI,KAAK,UAAS,gDAA2B,8BAAM,yBAAKyH,IAAKlG,KAAOiG,IAAI,cAGvG,4BAAQxH,KAAK,UAAS,yCAAoB,8BAAM,yBAAKyH,IAAK8B,KAAM/B,IAAI,cACpE,4BAAQF,QA3DpB,WACZ,EAAKlB,MAAMoD,QAAQC,KAAK,WACxBX,KAyDkD9I,KAAK,UAAS,yCAAoB,8BAAM,yBAAKyH,IAAKiC,KAAQlC,IAAI,kBAOxGY,GAAwB,kBAACuB,GAAD,CAAWlD,MAAM,QAAQD,YAAauC,IAG9DV,GAAoB,kBAACsB,GAAD,CAAWjD,cAAe+B,EAAY/G,IAAK+E,MAAM,OAAOD,YAAawC,IAGzFV,GAAqB,kBAAC,GAAD,CAAW9B,YAxFhB,WACxB,EAAKS,UAAS,SAAAnH,GAAK,MAAK,CAAEwI,mBAAoBxI,EAAMwI,6B,gDApD5BsB,EAAWjB,GACvC,OAAIiB,EAAUxI,MAAQuH,EAAUvH,IACrB,CAAEA,IAAKwI,EAAUxI,KACvBwI,EAAUjK,gBACR,KADgC,CAAEA,iBAAiB,O,GApB3CkK,IAAMlC,gBAmLdC,gBAfS,SAAA9H,GAAK,MAAK,CAC9BmB,OAAQnB,EAAMyB,MAAMN,OACpBC,MAAOpB,EAAMyB,MAAML,MACnBC,QAASrB,EAAMyB,MAAMJ,QACrBC,IAAKtB,EAAMyB,MAAMH,IACjBzB,gBAAiBG,EAAMwB,KAAK3B,oBAGL,SAAAkI,GAAQ,MAAK,CACpC/C,UAAW,kBAAM+C,EN3LgB,CACjC7H,KAAME,EAAiBC,oBM2LvByI,eAAgB,SAAAjH,GAAE,OAAIkG,EN1JM,SAAAlG,GAAE,MAAK,CACnC3B,KAAME,EAAiBO,mBACvBR,QAAS0B,GMwJsBmI,CAAiBnI,KAChDkH,YAAa,SAAAlH,GAAE,OAAIkG,EN/Ka,SAAAlG,GAAE,MAAK,CACvC3B,KAAME,EAAiBa,yBACvBd,QAAS0B,GM6KmBoI,CAAqBpI,KACjDmH,WAAY,kBAAMjB,EThKa,CAC/B7H,KAAMlB,EAAgBK,qBSkKXyI,CAA6CoC,YAAW7B,K,SC7LjE8B,I,MAASJ,IAAMK,MAAK,SAAA9D,GAAU,IACxBzG,EAAoByG,EAApBzG,gBAGFoI,EAAQoC,iBAAO,MACfC,EAAWD,iBAAO,MAGlBE,EAAcF,iBAAO,MACrBhD,EAAOgD,iBAAO,MACdG,EAAiBH,iBAAO,MACxBI,EAAkBJ,iBAAO,MAXA,EAaOK,oBAAS,GAbhB,oBAaxBC,EAbwB,KAaXC,EAbW,KAezBC,EAAa,WACfD,GAAgBD,IAqBpB,OAAI9K,EAAwB,kBAAC,IAAD,CAAUiL,GAAG,MAErC,kBAAC,IAAM3B,SAAP,KACI,yBAAKtC,UAAU,UACX,yBAAKA,UAAU,4BACX,uDACA,0BAAMC,SAxBG,SAAAC,GACrBA,EAAEC,iBACFV,EAAM9C,OAAO,CACTyE,MAAOA,EAAM8C,QAAQzD,MACrBgD,SAAUA,EAASS,QAAQzD,UAqBf,yBAAKT,UAAU,aACX,2BAAOI,QAAQ,SAAf,SACA,yBAAKJ,UAAU,iBACX,2BAAOmE,aAAa,sBAAsBzD,YAAY,mBAAmBrH,KAAK,QAAQ+K,IAAKhD,EAAOZ,KAAK,QAAQxF,GAAG,QAAQgF,UAAU,YAG5I,yBAAKA,UAAU,aACX,2BAAOI,QAAQ,YAAf,YACA,yBAAKJ,UAAU,iBACX,2BACImE,aAAa,WACbzD,YAAY,sBACZrH,KAAK,WACL+K,IAAKX,EACLjD,KAAK,WACLxF,GAAG,WACHgF,UAAU,QACVqE,aAAa,SAIzB,2BAAOrE,UAAU,aAAa3G,KAAK,SAASoH,MAAM,aAEtD,yBAAKT,UAAU,oBAAf,8BAC+B,0BAAMW,QAASqD,GAAf,kBAItCF,GACG,yBAAK9D,UAAU,UACX,yBAAKA,UAAU,oBACX,0BAAMW,QAASqD,EAAYhE,UAAU,aAArC,QAGA,mDACA,0BAAMC,SApDD,SAAAC,GACrBA,EAAEC,iBACFV,EAAM7C,OAAO,CACTwE,MAAOsC,EAAYQ,QAAQzD,MAC3BgD,SAAUE,EAAeO,QAAQzD,MACjCmD,gBAAiBA,EAAgBM,QAAQzD,MACzCD,KAAMA,EAAK0D,QAAQzD,UA+CH,yBAAKT,UAAU,aACX,2BAAOI,QAAQ,gBAAf,SACA,yBAAKJ,UAAU,iBACX,2BAAOU,YAAY,mBAAmBrH,KAAK,QAAQ+K,IAAKV,EAAa1I,GAAG,eAAegF,UAAU,YAGzG,yBAAKA,UAAU,aACX,2BAAOI,QAAQ,eAAf,QACA,yBAAKJ,UAAU,iBACX,2BAAOU,YAAY,sBAAsBrH,KAAK,OAAO+K,IAAK5D,EAAMxF,GAAG,cAAcgF,UAAU,YAGnG,yBAAKA,UAAU,aACX,2BAAOI,QAAQ,mBAAf,YACA,yBAAKJ,UAAU,iBACX,2BACIU,YAAY,sBACZrH,KAAK,WACL+K,IAAKT,EACL3I,GAAG,kBACHgF,UAAU,QACVqE,aAAa,UAIzB,yBAAKrE,UAAU,aACX,2BAAOI,QAAQ,oBAAf,oBACA,yBAAKJ,UAAU,iBACX,2BACIU,YAAY,wBACZrH,KAAK,WACL+K,IAAKR,EACL5I,GAAG,mBACHgF,UAAU,QACVqE,aAAa,UAIzB,yBAAKrE,UAAU,aACX,2BAAOA,UAAU,aAAa3G,KAAK,SAASoH,MAAM,qBAmBnEQ,gBATS,SAAA9H,GAAK,MAAK,CAC9BH,gBAAiBG,EAAMwB,KAAK3B,oBAGL,SAAAkI,GAAQ,MAAK,CACpCvE,OAAQ,SAAAhC,GAAI,OAAIuG,EV1IO,SAAAvG,GAAI,MAAK,CAChCtB,KAAMlB,EAAgBE,cACtBiB,QAASqB,GUwIgB2J,CAAY3J,KACrCiC,OAAQ,SAAAjC,GAAI,OAAIuG,EV5HO,SAAAvG,GAAI,MAAK,CAChCtB,KAAMlB,EAAgBQ,cACtBW,QAASqB,GU0HgB4J,CAAY5J,QAG1BsG,CAA6CoC,YAAWC,KC3GxDkB,I,6KArBP,OACI,kBAAC,IAAD,CAAUrF,MAAOA,IACb,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIsF,OAAK,EACLC,KAAK,UACLC,OAAQ,WAEJ,OADcrJ,aAAaC,QAAQ,SACjB,kBAAC,IAAD,CAAU0I,GAAG,MACxB,kBAAC,GAAD,SAGf,kBAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAnBzBC,EAmB4CpD,GAlB/ClG,aAAaC,QAAQ,SAE5B,kBAACqJ,EAAD,MADY,kBAAC,IAAD,CAAUX,GAAG,YAFf,IAAAW,Y,GAFX1B,IAAM2B,YCHxBC,IAASH,OACL,kBAAC,IAAMI,WAAP,KACI,kBAAC,GAAD,OAEJC,SAASC,eAAe,W","file":"static/js/main.6aee8641.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.515ea9ea.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.6421649f.svg\";","module.exports = __webpack_public_path__ + \"static/media/more.874cd32b.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.7753ba08.svg\";","module.exports = __webpack_public_path__ + \"static/media/group.03a0ce31.svg\";","module.exports = __webpack_public_path__ + \"static/media/gear.02452b0e.svg\";","module.exports = __webpack_public_path__ + \"static/media/logout.7d7c0ba2.svg\";","const userActionTypes = {\r\n    SET_CURRENT_USER: 'SET_CURRENT_USER',\r\n    SIGN_IN_START: 'SIGN_IN_START',\r\n    SIGN_IN_SUCCESS: 'SIGN_IN_SUCCESS',\r\n    SIGN_IN_FAILURE: 'SIGN_IN_FAILURE',\r\n    SIGN_OUT_START: 'SIGN_OUT_START',\r\n    SIGN_OUT_SUCCESS: 'SIGN_OUT_SUCCESS',\r\n    SIGN_OUT_FAILURE: 'SIGN_OUT_FAILURE',\r\n    SIGN_UP_START: 'SIGN_UP_START',\r\n    SIGN_UP_SUCCESS: 'SIGN_UP_SUCCESS',\r\n    SIGN_UP_FAILURE: 'SIGN_UP_FAILURE',\r\n}\r\n\r\nexport default userActionTypes;","import userActionTypes from \"./user.types\";\r\n\r\nconst INITIAL_STATE = {\r\n    currentUser: null,\r\n    isAuthenticated: false,\r\n    error: null\r\n};\r\n\r\nconst userReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case userActionTypes.SIGN_IN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                error: null\r\n            };\r\n        case userActionTypes.SIGN_UP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                currentUser: action.payload,\r\n                isAuthenticated: true,\r\n                error: null\r\n            };\r\n        case userActionTypes.SIGN_OUT_START:\r\n            return {\r\n                ...state,\r\n\r\n            }\r\n        case userActionTypes.SIGN_OUT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                currentUser: null,\r\n                isAuthenticated: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default userReducer;\r\n","const groupActionTypes = {\r\n    GET_GROUPS_START: \"GET_GROUPS_START\",\r\n    GET_GROUPS_SUCCESS: \"GET_GROUPS_SUCCESS\",\r\n    GET_GROUPS_FAILURE: \"GET_GROUPS_FAILURE\",\r\n    CREATE_GROUP_START: \"CREATE_GROUP_START\",\r\n    CREATE_GROUP_SUCCESS: \"CREATE_GROUP_SUCCESS\",\r\n    CREATE_GROUP_FAILURE: \"CREATE_GROUP_FAILURE\",\r\n    DELETE_GROUP_START: 'DELETE_GROUP_START',\r\n    DELETE_GROUP_SUCCESS: 'DELETE_GROUP_SUCCESS',\r\n    DELETE_GROUP_FAILURE: 'DELETE_GROUP_FAILURE',\r\n    ADD_USER_START: 'ADD_USER_START',\r\n    ADD_USER_SUCCESS: 'ADD_USER_SUCCESS',\r\n    ADD_USER_FAILURE: 'ADD_USER_FAILURE',\r\n    GET_USERS_IN_GROUP_START: 'GET_USERS_IN_GROUP_START',\r\n    GET_USERS_IN_GROUP_SUCCESS: 'GET_USERS_IN_GROUP_SUCCESS'\r\n};\r\n\r\nexport default groupActionTypes;\r\n","import groupActionTypes from \"./group.types\";\r\n\r\nconst INITIAL_STATE = {\r\n    groups: [],\r\n    users: [],\r\n    error: null,\r\n    loading: '',\r\n    msg: null\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case groupActionTypes.GET_GROUPS_START:\r\n            return {\r\n                ...state,\r\n                loading: 'main'\r\n            }\r\n        case groupActionTypes.GET_GROUPS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                groups: action.payload,\r\n                loading: ''\r\n            };\r\n        case groupActionTypes.GET_USERS_IN_GROUP_START:\r\n            return {\r\n                ...state,\r\n                loading: 'modal'\r\n            }\r\n        case groupActionTypes.GET_USERS_IN_GROUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                users: action.payload,\r\n                loading: '',\r\n                msg: 'get users successfully'\r\n            }\r\n        case groupActionTypes.CREATE_GROUP_START:\r\n            return {\r\n                ...state,\r\n                loading: 'modal',\r\n                msg: ''\r\n            };\r\n        case groupActionTypes.CREATE_GROUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                groups: state.groups.concat(action.payload),\r\n                loading: '',\r\n                msg: \"create new successfully\"\r\n            };\r\n        case groupActionTypes.DELETE_GROUP_START:\r\n            return {\r\n                ...state,\r\n                loading: 'delete'\r\n            }\r\n        case groupActionTypes.DELETE_GROUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                groups: state.groups.filter(group => group._id !== action.payload.id),\r\n                msg: action.payload.msg,\r\n                loading: ''\r\n            }\r\n        case groupActionTypes.ADD_USER_START:\r\n            return {\r\n                ...state,\r\n                loading: 'modal'\r\n            }\r\n        case groupActionTypes.ADD_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                users: state.users.concat(action.payload),\r\n                loading: '',\r\n                msg: 'add new successfully'\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport user from \"./user/user.reducer\";\r\nimport group from \"./group/group.reducer\";\r\n\r\nexport default combineReducers({\r\n    user,\r\n    group\r\n});\r\n","import userActionTypes from \"./user.types\";\r\n\r\nexport const signInStart = user => ({\r\n    type: userActionTypes.SIGN_IN_START,\r\n    payload: user\r\n});\r\n\r\nexport const signInSuccess = user => ({\r\n    type: userActionTypes.SIGN_IN_SUCCESS,\r\n    payload: user\r\n});\r\n\r\nexport const signInFailure = err => ({\r\n    type: userActionTypes.SIGN_IN_FAILURE,\r\n    payload: err\r\n});\r\n\r\nexport const signUpStart = user => ({\r\n    type: userActionTypes.SIGN_UP_START,\r\n    payload: user\r\n});\r\n\r\nexport const signUpSuccess = user => ({\r\n    type: userActionTypes.SIGN_UP_SUCCESS,\r\n    payload: user\r\n});\r\n\r\nexport const signUpFailure = err => ({\r\n    type: userActionTypes.SIGN_UP_FAILURE,\r\n    payload: err\r\n});\r\n\r\nexport const signOutStart = () => ({\r\n    type: userActionTypes.SIGN_OUT_START\r\n})\r\n\r\nexport const signOutSuccess = () => ({\r\n    type: userActionTypes.SIGN_OUT_SUCCESS\r\n})","import axios from \"axios\";\r\n\r\nexport const token = localStorage.getItem(\"token\");\r\nexport const api = axios.create({\r\n    baseURL: \"https://young-falls-17697.herokuapp.com/api\",\r\n    headers: {\r\n        \"Content-Type\": \"application/json\"\r\n    }\r\n});\r\n\r\napi.interceptors.request.use(function (config) {\r\n    const token = localStorage.getItem('token');\r\n    config.headers.token = token ? token : '';\r\n    return config\r\n});\r\n\r\nif (token) axios.defaults.headers[\"token\"] = token;\r\n\r\nconst callApi = () => {\r\n    return {\r\n        async get(endpoint) {\r\n            try {\r\n                const res = await api.get(endpoint);\r\n                return res.data;\r\n            } catch (error) {\r\n                return error.response;\r\n            }\r\n        },\r\n\r\n        async post(endpoint, body) {\r\n            try {\r\n                const res = await api.post(endpoint, body);\r\n                return res.data;\r\n            } catch (error) {\r\n                return error.response;\r\n            }\r\n        },\r\n\r\n        async delete(endpoint) {\r\n            try {\r\n                const res = await api.delete(endpoint);\r\n                return res.data;\r\n            } catch (error) {\r\n                return error.response;\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nexport default callApi();\r\n","import { takeLatest, put, all, call, fork } from \"redux-saga/effects\";\r\nimport userActionTypes from \"./user.types\";\r\nimport { signInSuccess, signInFailure, signUpSuccess, signOutSuccess } from \"./user.actions\";\r\nimport api from \"../../api\";\r\n\r\nexport function* signIn({ payload }) {\r\n    try {\r\n        const res = yield call(api.post, \"users/signin\", payload);\r\n\r\n        if (res.token) {\r\n            const { token, user } = res;\r\n            localStorage.setItem(\"user\", JSON.stringify(user));\r\n            localStorage.setItem(\"token\", token);\r\n            yield put(signInSuccess());\r\n        } else {\r\n            throw new Error(res.data.error)\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        yield put(signInFailure(err));\r\n    }\r\n}\r\n\r\nexport function* signUp({ payload }) {\r\n    try {\r\n        const data = yield call(api.post, \"users/signup\", payload);\r\n        const { token, user } = data;\r\n        localStorage.setItem(\"user\", JSON.stringify(user));\r\n        localStorage.setItem(\"token\", token);\r\n        yield put(signUpSuccess(user));\r\n    } catch (err) {\r\n        yield put(signInFailure(err));\r\n    }\r\n}\r\n\r\nexport function* signout() {\r\n    localStorage.clear('token', 'user');\r\n    yield put(signOutSuccess())\r\n}\r\n\r\nexport function* onSignIn() {\r\n    yield takeLatest(userActionTypes.SIGN_IN_START, signIn);\r\n}\r\n\r\nexport function* onSignUp() {\r\n    yield takeLatest(userActionTypes.SIGN_UP_START, signUp);\r\n}\r\n\r\nexport function* onSignOut() {\r\n    yield takeLatest(userActionTypes.SIGN_OUT_START, signout)\r\n}\r\n\r\nexport function* userSagas() {\r\n    yield all([fork(onSignIn), fork(onSignUp), fork(onSignOut)]);\r\n}\r\n","import groupActionTypes from \"./group.types\";\r\n\r\nexport const getGroupsStart = () => ({\r\n    type: groupActionTypes.GET_GROUPS_START\r\n});\r\n\r\nexport const getGroupSuccess = groups => ({\r\n    type: groupActionTypes.GET_GROUPS_SUCCESS,\r\n    payload: groups\r\n});\r\n\r\nexport const getGroupsFailure = err => ({\r\n    type: groupActionTypes.GET_GROUPS_FAILURE,\r\n    payload: err\r\n});\r\n\r\nexport const getUsersInGroupStart = id => ({\r\n    type: groupActionTypes.GET_USERS_IN_GROUP_START,\r\n    payload: id\r\n})\r\n\r\nexport const getUsersInGroupSuccess = users => ({\r\n    type: groupActionTypes.GET_USERS_IN_GROUP_SUCCESS,\r\n    payload: users\r\n})\r\n\r\nexport const createGroupStart = body => ({\r\n    type: groupActionTypes.CREATE_GROUP_START,\r\n    payload: body\r\n});\r\n\r\nexport const createGroupSuccess = group => ({\r\n    type: groupActionTypes.CREATE_GROUP_SUCCESS,\r\n    payload: group\r\n});\r\n\r\nexport const deleteGroupStart = id => ({\r\n    type: groupActionTypes.DELETE_GROUP_START,\r\n    payload: id\r\n})\r\n\r\nexport const deleteGroupSuccess = (id, msg) => ({\r\n    type: groupActionTypes.DELETE_GROUP_SUCCESS,\r\n    payload: { id, msg }\r\n})\r\n\r\nexport const addUserStart = data => ({\r\n    type: groupActionTypes.ADD_USER_START,\r\n    payload: data\r\n})\r\n\r\nexport const addUserSuccess = user => ({\r\n    type: groupActionTypes.ADD_USER_SUCCESS,\r\n    payload: user\r\n})","import { takeEvery, takeLatest, call, put, fork, all } from \"redux-saga/effects\";\r\nimport groupActionTypes from \"./group.types\";\r\nimport api from \"../../api\";\r\nimport { createGroupSuccess, getGroupSuccess, deleteGroupSuccess, addUserSuccess, getUsersInGroupSuccess } from \"./group.actions\";\r\n\r\nexport function* createGroup({ payload }) {\r\n    try {\r\n        const { group } = yield call(api.post, \"/groups\", payload);\r\n        yield put(createGroupSuccess(group));\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nexport function* getGroups() {\r\n    try {\r\n        const { groups } = yield call(api.get, \"/groups\");\r\n        yield put(getGroupSuccess(groups));\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nexport function* getUserInGroup({ payload }) {\r\n    try {\r\n        const { users } = yield call(api.get, `/groups/${payload}/getUsers`)\r\n        yield put(getUsersInGroupSuccess(users))\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport function* deleteGroup({ payload }) {\r\n    try {\r\n        const { group, message } = yield call(api.delete, `/groups/${payload}`);\r\n        yield put(deleteGroupSuccess(group._id, message))\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nexport function* addUser({ payload }) {\r\n    try {\r\n        const { user } = yield call(api.post, '/groups/addUser', payload)\r\n        yield put(addUserSuccess(user))\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nexport function* onGetGroup() {\r\n    yield takeEvery(groupActionTypes.GET_GROUPS_START, getGroups);\r\n}\r\n\r\nexport function* onGetUsersInGroup() {\r\n    yield takeEvery(groupActionTypes.GET_USERS_IN_GROUP_START, getUserInGroup);\r\n}\r\n\r\nexport function* onCreateGroup() {\r\n    yield takeLatest(groupActionTypes.CREATE_GROUP_START, createGroup);\r\n}\r\n\r\nexport function* onDeleteGroup() {\r\n    yield takeLatest(groupActionTypes.DELETE_GROUP_START, deleteGroup)\r\n}\r\n\r\nexport function* onAddUser() {\r\n    yield takeLatest(groupActionTypes.ADD_USER_START, addUser)\r\n}\r\n\r\nexport function* groupSagas() {\r\n    yield all([\r\n        fork(onGetGroup),\r\n        fork(onGetUsersInGroup),\r\n        fork(onCreateGroup),\r\n        fork(onDeleteGroup),\r\n        fork(onAddUser)\r\n    ]);\r\n}\r\n","import { all, fork } from \"redux-saga/effects\";\r\nimport { userSagas } from \"./user/user.sagas\";\r\nimport { groupSagas } from \"./group/group.sagas\";\r\n\r\nexport default function* rootSaga() {\r\n    yield all([fork(userSagas), fork(groupSagas)]);\r\n}\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nimport rootReducer from \"./root-reducer\";\r\nimport rootSaga from \"./root-saga\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n","import React, { PureComponent } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createGroupStart, addUserStart } from '../../redux/group/group.actions'\r\nimport spinner from '../../assets/icons/spinner.svg'\r\nimport './style.scss'\r\n\r\nclass Modal extends PureComponent {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            setValue: '',\r\n            inputValue: ''\r\n\r\n        }\r\n    }\r\n    render() {\r\n        const { inputValue } = this.state\r\n        const { createGroup, addUser, loading, toggleModal, field, groupActiveId } = this.props\r\n\r\n        const onSubmit = e => {\r\n            e.preventDefault();\r\n            switch (field) {\r\n                case 'group':\r\n                    createGroup(inputValue);\r\n                    break;\r\n                case 'user':\r\n                    addUser(groupActiveId, inputValue)\r\n                    break;\r\n                default:\r\n                    return\r\n            }\r\n        };\r\n\r\n        const setValue = (e) => {\r\n            this.setState({\r\n                [e.target.name]: e.target.value\r\n            })\r\n        }\r\n\r\n        return (\r\n            <div className='modal'>\r\n                <div className='modal-content'>\r\n                    <form onSubmit={onSubmit}>\r\n                        <label htmlFor='group-name'>{field === 'group' ? 'Group Name' : 'Email'}</label>\r\n                        <div className='input-control'>\r\n                            <input onChange={setValue} name='inputValue' type='text' placeholder={`Enter ${field === 'group' ? 'group name' : 'user\\'s email'}`} id='group-name' />\r\n                        </div>\r\n                        <div className='btn-wrapper'>\r\n                            <button onClick={toggleModal} type='button' value='cancel'>Cancel</button>\r\n                            <button disabled={loading && true} type='submit' value='submit'>{field === 'group' ? 'Create' : 'Add'}</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                {loading === 'modal' && <img alt='Loading...' className='spinner' src={spinner} />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    loading: state.group.loading,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    createGroup: name => dispatch(createGroupStart({ name })),\r\n    addUser: (groupId, email) => dispatch(addUserStart({ groupId, email }))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\r\n","import React, { PureComponent } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport spinner from '../../assets/icons/spinner.svg';\r\nimport './style.scss';\r\n\r\nclass ListModal extends PureComponent {\r\n\r\n    render() {\r\n        const { loading, users, toggleModal } = this.props\r\n        return (\r\n            <div className='modal'>\r\n                <div className='modal-content'>\r\n                    <ul className='user-list'>\r\n                        {\r\n                            users.map(user => <li className='user-item' key={user._id}>{user.name}</li>)\r\n                        }\r\n                    </ul>\r\n                    <button onClick={toggleModal} type='button'>Close</button>\r\n                </div>\r\n                {loading === 'modal' && <img alt='Loading...' className='spinner center' src={spinner} />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    loading: state.group.loading,\r\n    users: state.group.users\r\n});\r\n\r\nexport default connect(mapStateToProps)(ListModal);","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getGroupsStart, deleteGroupStart, getUsersInGroupStart } from \"../../redux/group/group.actions\";\r\nimport FormModal from '../../Components/FormModal'\r\nimport ListModal from '../../Components/ListModal'\r\nimport plus from \"../../assets/icons/plus.svg\";\r\nimport spinner from \"../../assets/icons/spinner.svg\";\r\nimport more from '../../assets/icons/more.svg'\r\nimport user from '../../assets/icons/user.svg'\r\nimport group from '../../assets/icons/group.svg'\r\nimport gear from '../../assets/icons/gear.svg'\r\nimport logout from '../../assets/icons/logout.svg'\r\nimport { signOutStart } from \"../../redux/user/user.actions\";\r\nimport \"./style.scss\";\r\n\r\nclass HomePage extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            openCreateGroupModal: false,\r\n            openAddUserModal: false,\r\n            openUserListModal: false,\r\n            openOption: false,\r\n            isChanged: true,\r\n            groupActive: {},\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getGroups()\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        if (nextProps.msg !== prevState.msg)\r\n            return { msg: nextProps.msg }\r\n        if (!nextProps.isAuthenticated) return { isAuthenticated: false }\r\n        return null\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        console.log(this.state)\r\n        console.log(prevState)\r\n        console.log(prevProps)\r\n        if (this.state.msg !== prevState.msg) {\r\n            switch (this.state.msg) {\r\n                case 'Delete group successfully':\r\n                    this.setState({\r\n                        groupActive: {},\r\n                        msg: ''\r\n                    })\r\n                    break;\r\n                case 'add new successfully':\r\n                    console.log(this.state)\r\n                    this.setState({\r\n                        openAddUserModal: false,\r\n                        msg: ''\r\n                    })\r\n                    break;\r\n                case 'create new successfully':\r\n                    this.setState({\r\n                        openCreateGroupModal: false,\r\n                        msg: ''\r\n                    })\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { openCreateGroupModal, openAddUserModal, openUserListModal, groupActive, openOption, isChanged } = this.state;\r\n        const { loading, groups, users, deleteGroupReq, getUsersReq, signOutReq } = this.props;\r\n\r\n\r\n        const toggleGroupModal = () => {\r\n            this.setState(state => ({ openCreateGroupModal: !state.openCreateGroupModal }))\r\n        };\r\n\r\n        const toggleUserModal = () => {\r\n            this.setState(state => ({ openAddUserModal: !state.openAddUserModal }))\r\n        }\r\n\r\n        const toggleUserListModal = () => {\r\n            this.setState(state => ({ openUserListModal: !state.openUserListModal }))\r\n        }\r\n\r\n        const toggleOption = () => {\r\n            this.setState(state => ({ openOption: !state.openOption }))\r\n        }\r\n\r\n        const setActive = group => {\r\n            this.setState({ groupActive: group, isChanged: true })\r\n        };\r\n\r\n        const deleteGroup = (id) => {\r\n            deleteGroupReq(id)\r\n        }\r\n\r\n        const signOut = () => {\r\n            this.props.history.push('/signin')\r\n            signOutReq()\r\n        }\r\n\r\n        const getUsers = () => {\r\n            console.log(users)\r\n            if (users.length === 0 || isChanged) {\r\n                getUsersReq(groupActive._id)\r\n                this.setState({\r\n                    isChanged: false\r\n                })\r\n            }\r\n            this.setState({\r\n                openUserListModal: true\r\n            })\r\n        }\r\n\r\n        if (loading === 'main') return <img className='main-loading' alt='Loading...' src={spinner} />\r\n        return (\r\n            <React.Fragment>\r\n                <div className='main'>\r\n                    {loading === 'delete' &&\r\n                        <>\r\n                            <img className='delete-spinner' src={spinner} alt='Loading...' />\r\n                            <div className=\"overlay\"></div>\r\n                        </>\r\n                    }\r\n                    <div className='side-bar' style={{ opacity: loading === 'delete' && 0.8 }}>\r\n                        <div className='top-side-bar'>\r\n                            <span className='title'>Group List</span>\r\n                            <button onClick={toggleGroupModal} className='create-new-group tooltip'>\r\n                                <img className='plus-icon tooltip' src={plus} alt='Add' />\r\n                                <span className='tooltiptext'>Create Group</span>\r\n                            </button>\r\n                        </div>\r\n                        {groups.length > 0 && (\r\n                            <ul className='group-list'>\r\n                                {groups.map(({ name, _id }) => (\r\n                                    <li className={`group-item ${groupActive._id === _id && \"highlight\"}`} key={_id} onClick={() => setActive({ name, _id })}>\r\n                                        <span>{name}</span> {groupActive._id === _id && <div onClick={() => deleteGroup(_id)} className='tooltip'>&#10005; <div className='tooltiptext'>Delete</div></div>}\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        )}\r\n                    </div>\r\n                    <div className='chat-container'>\r\n                        <div className=\"top-chat\">\r\n                            <div className=\"group-name\">{groupActive.name}</div>\r\n                            <div className=\"option-wrapper\">\r\n                                <img onClick={toggleOption} className='three-dot' src={more} alt=\"More\" />\r\n                                {openOption && <div className='option'>\r\n                                    {groupActive._id &&\r\n                                        <>\r\n                                            <button onClick={toggleUserModal} type='button'><span>Add New User</span><span><img src={user} alt=\"user\" /></span></button>\r\n                                            <button onClick={getUsers} type='button'><span>Users In Group</span><span><img src={group} alt='people' /></span></button>\r\n                                        </>\r\n                                    }\r\n                                    <button type='button'><span>Setting</span><span><img src={gear} alt='setting' /></span></button>\r\n                                    <button onClick={signOut} type='button'><span>Log Out</span><span><img src={logout} alt='logout' /></span></button>\r\n                                </div>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    openCreateGroupModal && <FormModal field='group' toggleModal={toggleGroupModal} />\r\n                }\r\n                {\r\n                    openAddUserModal && <FormModal groupActiveId={groupActive._id} field='user' toggleModal={toggleUserModal} />\r\n                }\r\n                {\r\n                    openUserListModal && <ListModal toggleModal={toggleUserListModal} />\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    groups: state.group.groups,\r\n    users: state.group.users,\r\n    loading: state.group.loading,\r\n    msg: state.group.msg,\r\n    isAuthenticated: state.user.isAuthenticated\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getGroups: () => dispatch(getGroupsStart()),\r\n    deleteGroupReq: id => dispatch(deleteGroupStart(id)),\r\n    getUsersReq: id => dispatch(getUsersInGroupStart(id)),\r\n    signOutReq: () => dispatch(signOutStart())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(HomePage));\r\n","import React, { useState, useRef } from \"react\";\r\nimport { withRouter, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signInStart, signUpStart } from \"../../redux/user/user.actions\";\r\nimport \"./style.scss\";\r\n\r\nconst SignIn = React.memo(props => {\r\n    const { isAuthenticated } = props;\r\n\r\n    // SIGN IN\r\n    const email = useRef(null);\r\n    const password = useRef(null);\r\n\r\n    // SIGN UP\r\n    const emailSignUp = useRef(null);\r\n    const name = useRef(null);\r\n    const passwordSignUp = useRef(null);\r\n    const confirmPassword = useRef(null);\r\n\r\n    const [displayForm, setDisplayForm] = useState(false);\r\n\r\n    const toggleForm = () => {\r\n        setDisplayForm(!displayForm);\r\n    };\r\n\r\n    const submitFormSignIn = e => {\r\n        e.preventDefault();\r\n        props.signIn({\r\n            email: email.current.value,\r\n            password: password.current.value\r\n        });\r\n    };\r\n\r\n    const submitFormSignUp = e => {\r\n        e.preventDefault();\r\n        props.signUp({\r\n            email: emailSignUp.current.value,\r\n            password: passwordSignUp.current.value,\r\n            confirmPassword: confirmPassword.current.value,\r\n            name: name.current.value\r\n        });\r\n    };\r\n\r\n    if (isAuthenticated) return <Redirect to='/' />;\r\n    return (\r\n        <React.Fragment>\r\n            <div className='signin'>\r\n                <div className='container signin-wrapper'>\r\n                    <h3>Sign In to Your Account</h3>\r\n                    <form onSubmit={submitFormSignIn}>\r\n                        <div className='form-item'>\r\n                            <label htmlFor='email'>Email</label>\r\n                            <div className='control-input'>\r\n                                <input defaultValue='tandat198@gmail.com' placeholder='Enter your email' type='email' ref={email} name='email' id='email' className='input' />\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-item'>\r\n                            <label htmlFor='password'>Password</label>\r\n                            <div className='control-input'>\r\n                                <input\r\n                                    defaultValue='12345678'\r\n                                    placeholder='Enter your password'\r\n                                    type='password'\r\n                                    ref={password}\r\n                                    name='password'\r\n                                    id='password'\r\n                                    className='input'\r\n                                    autoComplete='on'\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <input className='submit-btn' type='submit' value='Sign In' />\r\n                    </form>\r\n                    <div className='not-have-account'>\r\n                        You don't have an account? <span onClick={toggleForm}>Sign Up Now</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {displayForm && (\r\n                <div className='signup'>\r\n                    <div className='signup-container'>\r\n                        <span onClick={toggleForm} className='close-btn'>\r\n                            &times;\r\n                        </span>\r\n                        <h3>Sign Up New Account</h3>\r\n                        <form onSubmit={submitFormSignUp}>\r\n                            <div className='form-item'>\r\n                                <label htmlFor='email-signup'>Email</label>\r\n                                <div className='control-input'>\r\n                                    <input placeholder='Enter your email' type='email' ref={emailSignUp} id='email-signup' className='input' />\r\n                                </div>\r\n                            </div>\r\n                            <div className='form-item'>\r\n                                <label htmlFor='name-signup'>Name</label>\r\n                                <div className='control-input'>\r\n                                    <input placeholder='Enter your fullname' type='text' ref={name} id='name-signup' className='input' />\r\n                                </div>\r\n                            </div>\r\n                            <div className='form-item'>\r\n                                <label htmlFor='password-signup'>Password</label>\r\n                                <div className='control-input'>\r\n                                    <input\r\n                                        placeholder='Enter your password'\r\n                                        type='password'\r\n                                        ref={passwordSignUp}\r\n                                        id='password-signup'\r\n                                        className='input'\r\n                                        autoComplete='off'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className='form-item'>\r\n                                <label htmlFor='password2-signup'>Confirm Password</label>\r\n                                <div className='control-input'>\r\n                                    <input\r\n                                        placeholder='Confirm Your Password'\r\n                                        type='password'\r\n                                        ref={confirmPassword}\r\n                                        id='password2-signup'\r\n                                        className='input'\r\n                                        autoComplete='off'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className='form-item'>\r\n                                <input className='submit-btn' type='submit' value='Sign Up' />\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.user.isAuthenticated\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    signIn: user => dispatch(signInStart(user)),\r\n    signUp: user => dispatch(signUpStart(user))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(SignIn));\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport HomePage from './Pages/HomePage'\nimport SignIn from \"./Pages/SignIn\";\nimport \"./App.scss\";\n\nclass App extends React.Component {\n    render() {\n        const authenticate = Page => {\n            const token = localStorage.getItem(\"token\");\n            if (!token) return <Redirect to='/signin' />;\n            return <Page />;\n        };\n\n        return (\n            <Provider store={store}>\n                <Router>\n                    <Switch>\n                        <Route\n                            exact\n                            path='/signin'\n                            render={() => {\n                                const token = localStorage.getItem(\"token\");\n                                if (token) return <Redirect to='/' />;\n                                return <SignIn />;\n                            }}\n                        />\n                        <Route exact path='/' render={() => authenticate(HomePage)} />\n                    </Switch>\n                </Router>\n            </Provider>\n        );\n    }\n}\n\nexport default App\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}